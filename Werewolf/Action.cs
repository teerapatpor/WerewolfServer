/*
 * Werewolf Engine
 *
 * This is a werewolf game engine for REST access. It is primarily developed for CPE200 class at Computer Engineering, Chiang Mai University.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: pruetboonma@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations.Schema;
using Newtonsoft.Json.Converters;

namespace DNWS.Werewolf 
{ 
    /// <summary>
    /// 
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class Action
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Key]
        [DataMember(Name="id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [Required]
        [DataMember(Name="name")]
        public string Name { get; set; }

        [DataMember(Name="actionrole")]
        public virtual ICollection<ActionRole> ActionRoles { get; set; }

        [NotMapped]
        [JsonProperty("roles")]
        public List<Role> Roles {get; set;}

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OutcomeEnum
        { 
            /// <summary>
            /// Enum TargetDeadEnum for TargetDead
            /// </summary>
            [EnumMember(Value = "Target Dead")]
            TargetDeadEnum = 1,
            
            /// <summary>
            /// Enum PlayerDeadEnum for PlayerDead
            /// </summary>
            [EnumMember(Value = "Player Dead")]
            PlayerDeadEnum = 2,
            
            /// <summary>
            /// Enum OtherPlayerDeadEnum for OtherPlayerDead
            /// </summary>
            [EnumMember(Value = "Other Player Dead")]
            OtherPlayerDeadEnum = 3,
            
            /// <summary>
            /// Enum NothingHappenedEnum for NothingHappened
            /// </summary>
            [EnumMember(Value = "Nothing Happened")]
            NothingHappenedEnum = 4,
            
            /// <summary>
            /// Enum ActionPerformedEnum for ActionPerformed
            /// </summary>
            [EnumMember(Value = "Action Performed")]
            ActionPerformedEnum = 5,
            
            /// <summary>
            /// Enum EnchantedEnum for Enchanted
            /// </summary>
            [EnumMember(Value = "Enchanted")]
            EnchantedEnum = 6,
            
            /// <summary>
            /// Enum JailedEnum for Jailed
            /// </summary>
            [EnumMember(Value = "Jailed")]
            JailedEnum = 7,
            
            /// <summary>
            /// Enum RevealedEnum for Revealed
            /// </summary>
            [EnumMember(Value = "Revealed")]
            RevealedEnum = 8,
            
            /// <summary>
            /// Enum UnknownEnum for Unknown
            /// </summary>
            [EnumMember(Value = "Unknown")]
            UnknownEnum = 9,
            
            /// <summary>
            /// Enum WerewolfEnum for Werewolf
            /// </summary>
            [EnumMember(Value = "Werewolf")]
            WerewolfEnum = 10,
            
            /// <summary>
            /// Enum VillagerEnum for Villager
            /// </summary>
            [EnumMember(Value = "Villager")]
            VillagerEnum = 11,
            
            /// <summary>
            /// Enum NotValidActionEnum for NotValidAction
            /// </summary>
            [EnumMember(Value = "Not Valid Action")]
            NotValidActionEnum = 12,
            
            /// <summary>
            /// Enum TargetIsNotAlivedEnum for TargetIsNotAlived
            /// </summary>
            [EnumMember(Value = "Target Is Not Alived")]
            TargetIsNotAlivedEnum = 13
        }

        /// <summary>
        /// Gets or Sets Outcome
        /// </summary>
        [NotMapped]
        [JsonProperty("outcome")]
        public OutcomeEnum? Outcome { get; set; }

        /// <summary>
        /// Gets or Sets Target
        /// </summary>
        [NotMapped]
        [JsonProperty("target")]
        public string Target { get; set; }
        public Action()
        {
            this.ActionRoles = new HashSet<ActionRole>();
        }
    }
}
